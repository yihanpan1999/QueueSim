import utils as H
from utils.package import *

class Patient(object):
    '''
    This class, Patient, is to model a patient in the real world.
    '''
    ID_generate = 0 # class variable, to generate the patients' distinct id

    def __init__(self, env, select = 0, arrive_time = None, schedule=False):
        # For distinct id
        self.id = str(Patient.ID_generate).zfill(H.DIGITS) 
        Patient.ID_generate += 1

        # For simulator
        self.env = env # contain the whole info of the simulator
        self.env.all_patient.append(self) # add the patiend into the simulator

        # For modeling the patient
        self.schedule = schedule # boolean, scheduled patient?
        self.revisit = False # boolean, revisit patient?

        # For recording some important time generated by the simulator
        ## row: 0-doctor, 1-blood test, 2-ultrasound, 3-revisit; 
        ## col: 0-arrive time, 1-start time, 2-complete time, 3-report time, 4-server id
        self.time = np.full((H.NUM_STEP, 5), None) 
        self.time[select, 0] = arrive_time
        self.scheduled_revisit_time = None # the simulator will tell a prediction time to revisit

        # the check items which the patient need to be served
        self.check_list = [] 
        self.checklist =  [] 
        
    # Meaningless
    def __lt__(self, a):
        return True
    
    # Return the state of the patient
    def isRevisit(self):
        return self.revisit

    # when to revisit, based on the prediction time and actual time when he/she complete all check items
    def policy(self, early_time):
        return max(self.scheduled_revisit_time, early_time)
    